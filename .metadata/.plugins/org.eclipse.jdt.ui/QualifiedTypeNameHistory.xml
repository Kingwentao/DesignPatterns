<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="javax.xml.crypto.Data"/>
<fullyQualifiedTypeName name="java.sql.Date"/>
<fullyQualifiedTypeName name="java.util.Date"/>
<fullyQualifiedTypeName name="命令模式.BakeMuttonCommand"/>
<fullyQualifiedTypeName name="命令模式.Command"/>
<fullyQualifiedTypeName name="命令模式.BakeChickenWingCommand"/>
<fullyQualifiedTypeName name="命令模式.Waiter"/>
<fullyQualifiedTypeName name="命令模式.Barbecue"/>
<fullyQualifiedTypeName name="java.text.SimpleDateFormat"/>
<fullyQualifiedTypeName name="java.util.concurrent.atomic.DoubleAdder"/>
<fullyQualifiedTypeName name="javax.activation.MailcapCommandMap"/>
<fullyQualifiedTypeName name="java.text.DateFormat"/>
<fullyQualifiedTypeName name="职责链模式.ConcreteHandler1"/>
<fullyQualifiedTypeName name="职责链模式.ConcreteHandler2"/>
<fullyQualifiedTypeName name="职责链模式.Handler"/>
<fullyQualifiedTypeName name="职责链模式.ConcreteHandler3"/>
<fullyQualifiedTypeName name="中介者模式.Country"/>
<fullyQualifiedTypeName name="javax.lang.model.type.DeclaredType"/>
<fullyQualifiedTypeName name="中介者模式.USA"/>
<fullyQualifiedTypeName name="中介者模式.UnitedNations"/>
<fullyQualifiedTypeName name="中介者模式.UniteNationSecurityCouncil"/>
<fullyQualifiedTypeName name="中介者模式.Iraq"/>
<fullyQualifiedTypeName name="kingguo.com.StaticProxy.Subject"/>
<fullyQualifiedTypeName name="kingguo.com.StaticProxy.RealSubject"/>
<fullyQualifiedTypeName name="kingguo.com.StaticProxy.StaticProxyDemo"/>
<fullyQualifiedTypeName name="kingguo.com.StaticProxy.RealSubjectCopy"/>
<fullyQualifiedTypeName name="kingguo.com.StaticProxy.Proxy"/>
<fullyQualifiedTypeName name="org.omg.CORBA.portable.InvokeHandler"/>
<fullyQualifiedTypeName name="java.lang.Override"/>
<fullyQualifiedTypeName name="java.lang.reflect.Method"/>
<fullyQualifiedTypeName name="java.lang.reflect.InvocationHandler"/>
<fullyQualifiedTypeName name="java.lang.Exception"/>
<fullyQualifiedTypeName name="kingguo.com.DynamicProxy.RealSubject"/>
<fullyQualifiedTypeName name="kingguo.com.DynamicProxy.ProxyHandler"/>
<fullyQualifiedTypeName name="kingguo.com.DynamicProxy.Subject"/>
<fullyQualifiedTypeName name="java.lang.reflect.Proxy"/>
<fullyQualifiedTypeName name="kingguo.com.DynamicProxy.RealSubjectCopy"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="java.util.Observer"/>
<fullyQualifiedTypeName name="java.lang.Object"/>
<fullyQualifiedTypeName name="观察者模式.Subject"/>
<fullyQualifiedTypeName name="观察者模式.ConcreteSubject"/>
<fullyQualifiedTypeName name="观察者模式.ConcreteObserver"/>
<fullyQualifiedTypeName name="观察者模式.Observer"/>
<fullyQualifiedTypeName name="java.lang.String"/>
<fullyQualifiedTypeName name="java.lang.InstantiationError"/>
<fullyQualifiedTypeName name="设配器模式.TenVoit"/>
<fullyQualifiedTypeName name="设配器模式.FiveVoit"/>
<fullyQualifiedTypeName name="设配器模式.VoltAdapter"/>
<fullyQualifiedTypeName name="设配器模式.VoltAdapter2"/>
<fullyQualifiedTypeName name="设配器模式.Volt220"/>
<fullyQualifiedTypeName name="饿汉单例.HungerSingleton"/>
<fullyQualifiedTypeName name="懒汉单例.LazySingleton"/>
<fullyQualifiedTypeName name="DCL单例.DCLSingleton"/>
<fullyQualifiedTypeName name="静态内部类单例.InternalClassSingleton.SingletonHolder"/>
<fullyQualifiedTypeName name="静态内部类单例.InternalClassSingleton"/>
<fullyQualifiedTypeName name="单例模式.Singleton"/>
<fullyQualifiedTypeName name="枚举单例.EnumSingleton"/>
<fullyQualifiedTypeName name="java.lang.Enum"/>
<fullyQualifiedTypeName name="枚举单例.EnumSingleton.Enum"/>
</qualifiedTypeNameHistroy>
